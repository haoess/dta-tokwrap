<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="text" encoding="UTF-8"/>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- parameters -->
  <xsl:param name="sids" select="0"/>       <!-- whether to output sentence IDs as comments -->
  <xsl:param name="wlocs" select="0"/>      <!-- whether to output token locations -->
  <xsl:param name="wids" select="0"/>       <!-- whether to output token IDs as analyses -->
  <xsl:param name="wchars" select="0"/>     <!-- whether to output token character-id-lists as analyses -->
  <xsl:param name="idprefix" select="'[xmlid] '"/>   <!-- xml:id analysis prefix string -->
  <xsl:param name="cprefix"  select="'[chars] '"/>   <!-- character-id-list analysis prefix string -->
  <xsl:param name="aprefix"  select="''"/>           <!-- default analysis prefix string -->

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- options -->
  <xsl:strip-space elements="sentences s w a"/>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Mode: main -->

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- main: template: root: traverse -->
  <xsl:template match="/*">
    <xsl:text>%% File auto-generated by dtatw-txml2t.xsl&#10;</xsl:text>
    <xsl:text>%% xml:base=</xsl:text><xsl:value-of select="@xml:base"/><xsl:text>&#10;&#10;</xsl:text>
    <xsl:apply-templates select="./s"/>
  </xsl:template>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- main: template: s -->
  <xsl:template match="s">
    <xsl:if test="$sids">
      <xsl:text>%% Sentence </xsl:text><xsl:value-of select="@xml:id"/><xsl:text>&#10;</xsl:text>
    </xsl:if>
    <xsl:apply-templates select="./w"/>
    <xsl:text>&#10;</xsl:text>
  </xsl:template>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- main: template: w -->
  <xsl:template match="w">
    <xsl:value-of select="@t"/>
    <xsl:if test="$wlocs">
      <xsl:text>&#09;</xsl:text>
      <xsl:value-of select="@b"/>
    </xsl:if>
    <xsl:if test="$wids">
      <xsl:text>&#09;</xsl:text>
      <xsl:value-of select="$idprefix"/>
      <xsl:value-of select="@xml:id"/>
    </xsl:if>
    <xsl:if test="$wchars">
      <xsl:text>&#09;</xsl:text>
      <xsl:value-of select="$cprefix"/>
      <xsl:value-of select="@c"/>
    </xsl:if>
    <xsl:apply-templates select="./a"/>
    <xsl:text>&#10;</xsl:text>
  </xsl:template>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- main: template: a -->
  <xsl:template match="a">
    <xsl:text>&#09;</xsl:text>
    <xsl:value-of select="$aprefix"/>
    <xsl:value-of select="text()"/>
  </xsl:template>

  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- main: default: just recurse -->
  <xsl:template match="*|@*|text()|processing-instruction()|comment()" priority="-1">
    <xsl:apply-templates select="*"/>
  </xsl:template>

</xsl:stylesheet>
