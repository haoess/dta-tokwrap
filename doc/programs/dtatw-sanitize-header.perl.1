.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DTATW-SANITIZE-HEADER.PERL 1"
.TH DTATW-SANITIZE-HEADER.PERL 1 "2017-07-26" "dta-tokwrap v0.78" "DTA Tokenization Utilities"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dtatw\-sanitize\-header.perl \- make DDC/DTA\-friendly TEI\-headers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& dtatw\-sanitize\-header.perl [OPTIONS] XML_HEADER_FILE
\&
\& General Options:
\&  \-help                  # this help message
\&  \-verbose LEVEL         # set verbosity level (0<=LEVEL<=1)
\&  \-quiet                 # alias for \-verbose=0
\&  \-dta , \-foreign        # do/don\*(Aqt warn about strict DTA header compliance (default=do)
\&
\& Auxilliary DB Options:  # optional BASENAME\-keyed JSON\-metadata Berkeley DB
\&  \-aux\-db DBFILE         # read auxilliary DB from DBFILE (default=none)
\&  \-aux\-xpath XPATH       # append <idno type="KEY"> elements to XPATH (default=\*(AqfileDesc[@n="ddc\-aux"]\*(Aq)
\&
\& I/O Options:
\&  \-blanks , \-noblanks    # do/don\*(Aqt keep \*(Aqignorable\*(Aq whitespace in XML_HEADER_FILE file (default=don\*(Aqt)
\&  \-base BASENAME         # use BASENAME to auto\-compute field names (default=basename(XML_HEADER_FILE))
\&  \-output FILE           # specify output file (default=\*(Aq\-\*(Aq (STDOUT))
.Ve
.SH "OPTIONS AND ARGUMENTS"
.IX Header "OPTIONS AND ARGUMENTS"
.SS "General Options"
.IX Subsection "General Options"
.IP "\-h, \-help" 4
.IX Item "-h, -help"
Display a brief usage summary and exit.
.IP "\-v, \-verbose \s-1LEVEL\s0" 4
.IX Item "-v, -verbose LEVEL"
Set verbosity level; values for \fI\s-1LEVEL\s0\fR are:
.Sp
.Vb 3
\& 0: silent
\& 1: warnings only
\& 2: warnings and progress messages
.Ve
.IP "\-q, \-quiet" 4
.IX Item "-q, -quiet"
Alis for \-verbose=0
.IP "\-b, \-basename \s-1BASENAME\s0" 4
.IX Item "-b, -basename BASENAME"
Set basename for generated header fields; default is
the basename (non-directory portion) of \fI\s-1XML_HEADER_FILE\s0\fR
up to but not including the first dot (\*(L".\*(R") character, if any.
In default \f(CW\*(C`\-dta\*(C'\fR mode, everything after the first dot character
in \fI\s-1BASENAME\s0\fR will be truncated even if you specify this option;
in \f(CW\*(C`\-foreign\*(C'\fR mode, dots in basenames passed in via this option are allowed.
.IP "\-dta, \-nodta" 4
.IX Item "-dta, -nodta"
Do/don't run with DTA-specific heuristics and attempt to enforce DTA-header compliance (default: do).
.IP "\-foreign" 4
.IX Item "-foreign"
Alias for \f(CW\*(C`\-nodta\*(C'\fR.
.SS "Auxilliary \s-1DB\s0 Options"
.IX Subsection "Auxilliary DB Options"
You can optionally use a \fI\s-1BASENAME\s0\fR\-keyed JSON-metadata Berkeley \s-1DB\s0 file
to automatically insert additional metadata fields into an existing header.
.IP "\-aux\-db \s-1DBFILE\s0" 4
.IX Item "-aux-db DBFILE"
Apply auxilliary metadata from Berkeley \s-1DB\s0 file \fI\s-1DBFILE\s0\fR (default=none).
Keys of \fI\s-1DBFILE\s0\fR should be \fI\s-1BASENAME\s0\fRs as parsed from \fI\s-1XML_HEADER_FILE\s0\fR
or passed in via the \f(CW\*(C`\-basename\*(C'\fR option, and the associated values should be
flat \s-1JSON\s0 objects whose keys are the names of metadata attributes for \fI\s-1BASENAME\s0\fR
and whose values are the values of those metadata attributes.
.IP "\-aux\-xpath \s-1XPATH\s0" 4
.IX Item "-aux-xpath XPATH"
Append \f(CW\*(C`<idno type="\f(CIKEY\f(CW">\f(CIVAL\f(CW\f(CIlt\f(CW/idno\f(CIgt\f(CW\*(C'\fR elements to \fI\s-1XPATH\s0\fR (default=\f(CW\*(AqfileDesc[@n="ddc\-aux"]\*(Aq\fR)
for auxilliary metadata attributes.
.SS "I/O Options"
.IX Subsection "I/O Options"
.IP "\-[no]keep\-blanks" 4
.IX Item "-[no]keep-blanks"
Do/don't retain all whitespace in input file (default=don't).
.IP "\-o, \-output \s-1OUTFILE\s0" 4
.IX Item "-o, -output OUTFILE"
Write output to \fI\s-1OUTFILE\s0\fR; default=\*(L"\-\*(R" (standard output).
.IP "\-format \s-1LEVEL\s0" 4
.IX Item "-format LEVEL"
Format output at libxml level \fI\s-1LEVEL\s0\fR (default=1).
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
dtatw\-sanitize\-header.perl applies some parsing and encoding heuristics to a TEI-XML header
file \fI\s-1XML_HEADER_FILE\s0\fR in an attempt to ensure compliance with DTA/D* header conventions for subsequent
\&\s-1DDC\s0 indexing.  For each supported metadata attribute, a corresponding header record
is first sought by means of a first-match-wins XPath list.  If no existing header record is found,
a default (possibly empty) value is heuristically assigned, and the resulting value is inserted
into the header at a conventional XPath location.
.PP
The metadata attributes currently supported are listed below;
Source XPaths in the list are specified relative to the
root \f(CW\*(C`<teiHeader>\*(C'\fR element, and unless otherwise noted,
the first source XPath listed is also the target XPath,
guaranteed to be exist in the output header on successful script completion.
.PP
See <http://kaskade.dwds.de/dstar/doc/README.html#bibliographic_metadata_attributes>
for details on D* metadata attribute conventions.
.SS "author"
.IX Subsection "author"
XPath(s):
.PP
.Vb 6
\& fileDesc/titleStmt/author[@n="ddc"]                                                    ##\-\- ddc: canonical target (formatted)
\& fileDesc/titleStmt/author                                                              ##\-\- new (direct, un\-formatted)
\& fileDesc/sourceDesc/biblFull/titleStmt/author                                          ##\-\- new (sourceDesc, un\-formatted)
\& fileDesc/titleStmt/editor[string(@corresp)!="#DTACorpusPublisher"]                     ##\-\- new (direct, un\-formatted)
\& fileDesc/sourceDesc/biblFull/titleStmt/editor[string(@corresp)!="#DTACorpusPublisher"] ##\-\- new (sourceDesc, un\-formatted)
\& fileDesc/sourceDesc/listPerson[@type="searchNames"]/person/persName                    ##\-\- old
.Ve
.PP
Heuristically parses and formats \f(CW\*(C`persName\*(C'\fR, \f(CW\*(C`surname\*(C'\fR, \f(CW\*(C`forename\*(C'\fR, and \f(CW\*(C`genName\*(C'\fR elements to a human-readable string.
In \s-1DTA\s0 mode, defaults to the first component of the \*(L"_\*(R"\-separated \fI\s-1BASENAME\s0\fR.
.SS "title"
.IX Subsection "title"
XPath(s):
.PP
.Vb 6
\& fileDesc/titleStmt/title[@type="main" or @type="sub" or @type="vol"]   ##\-\- DTA\-mode only
\& fileDesc/titleStmt/title[@type="ddc"]                                  ##\-\- ddc: canonical target (formatted)
\& fileDesc/titleStmt/title[not(@type)]
\& sourceDesc[@id="orig"]/biblFull/titleStmt/title
\& sourceDesc[@id="scan"]/biblFull/titleStmt/title
\& sourceDesc[not(@id)]/biblFull/titleStmt/title
.Ve
.PP
In \s-1DTA\s0 mode, heuristically parses and formats \f(CW\*(C`@type="main"\*(C'\fR, \f(CW\*(C`@type="sub"\*(C'\fR, \f(CW\*(C`@type="vol"\*(C'\fR elements to a human-readable string,
and defaults to the second component of the \*(L"_\*(R"\-separated \fI\s-1BASENAME\s0\fR.
.SS "date"
.IX Subsection "date"
XPath(s):
.PP
.Vb 8
\& fileDesc/sourceDesc[@n="ddc"]/biblFull/publicationStmt/date[@type="pub"]               ##\-\- ddc: canonical target
\& fileDesc/sourceDesc[@n="scan"]/biblFull/publicationStmt/date                           ##\-\- old:publDate
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="creation"]/supplied
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="creation"]
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="publication"]/supplied        ##\-\- new:date (published, supplied)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="publication"]                 ##\-\- new:date (published)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date/supplied                             ##\-\- new:date (generic, supplied)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date                                      ##\-\- new:date (generic, supplied)
.Ve
.PP
Heuristically trims everything but digits and hyphens from the extracted date-string.
In \s-1DTA\s0 mode, defaults to the final component of the \*(L"_\*(R"\-separated \fI\s-1BASENAME\s0\fR.
.SS "firstDate"
.IX Subsection "firstDate"
XPath(s):
.PP
.Vb 8
\& fileDesc/sourceDesc[@n="ddc"]/biblFull/publicationStmt/date[@type="first"]             ##\-\- ddc: canonical target
\& fileDesc/sourceDesc[@n="orig"]/biblFull/publicationStmt/date                           ##\-\- old: publDate
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="creation"]/supplied
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="creation"]
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="firstPublication"]/supplied   ##\-\- new:date (first, supplied)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date[@type="firstPublication"]            ##\-\- new:date (first)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date/supplied                             ##\-\- new:date (generic, supplied)
\& fileDesc/sourceDesc/biblFull/publicationStmt/date                                      ##\-\- new:date (generic, supplied)
.Ve
.PP
Heuristically trims everything but digits and hyphens from the extracted date-string.
Defaults to the publication date (see above).
.SS "bibl"
.IX Subsection "bibl"
XPath(s):
.PP
.Vb 4
\& fileDesc/sourceDesc[@n="ddc"]/bibl     ##\-\- ddc:canonical target
\& fileDesc/sourceDesc[@n="orig"]/bibl    ##\-\- old:firstBibl, target
\& fileDesc/sourceDesc[@n="scan"]/bibl    ##\-\- old:publBibl
\& fileDesc/sourceDesc/bibl               ##\-\- new|old:generic
.Ve
.PP
Heuristically generated from \fIauthor\fR, \fItitle\fR, and \fIdate\fR if not set.
Ensures that the first 2 XPaths are set in the output file.
.SS "shelfmark"
.IX Subsection "shelfmark"
XPath(s):
.PP
.Vb 5
\& fileDesc/sourceDesc[@n="ddc"]/msDesc/msIdentifier/idno/idno[@type="shelfmark"]         ##\-\- ddc: canonical target
\& fileDesc/sourceDesc[@n="ddc"]/msDesc/msIdentifier/idno[@type="shelfmark"]              ##\-\- \-2013\-08\-04
\& fileDesc/sourceDesc/msDesc/msIdentifier/idno/idno[@type="shelfmark"]
\& fileDesc/sourceDesc/msDesc/msIdentifier/idno[@type="shelfmark"]                        ##\-\- new (>=2012\-07)
\& fileDesc/sourceDesc/biblFull/notesStmt/note[@type="location"]/ident[@type="shelfmark"] ##\-\- old (<2012\-07)
.Ve
.SS "library"
.IX Subsection "library"
XPath(s):
.PP
.Vb 3
\& fileDesc/sourceDesc[@n="ddc"]/msDesc/msIdentifier/repository                           ##\-\- ddc: canonical target
\& fileDesc/sourceDesc/msDesc/msIdentifier/repository                                     ##\-\- new
\& fileDesc/sourceDesc/biblFull/notesStmt/note[@type="location"]/name[@type="repository"] ##\-\- old
.Ve
.SS "basename (dtadir)"
.IX Subsection "basename (dtadir)"
XPath(s):
.PP
.Vb 5
\& fileDesc/publicationStmt[@n="ddc"]/idno[@type="basename"]      ##\-\- new: canonical target
\& fileDesc/publicationStmt/idno/idno[@type="DTADirName"]         ##\-\- (>=2013\-09\-04)
\& fileDesc/publicationStmt/idno[@type="DTADirName"]              ##\-\- (>=2013\-09\-04)
\& fileDesc/publicationStmt/idno[@type="DTADIRNAME"]              ##\-\- new (>=2012\-07)
\& fileDesc/publicationStmt/idno[@type="DTADIR"]                  ##\-\- old (<2012\-07)
.Ve
.PP
Heuristically set to \fI\s-1BASENAME\s0\fR if not found.
.SS "dtaid"
.IX Subsection "dtaid"
XPath(s):
.PP
.Vb 3
\& fileDesc/publicationStmt[@n="ddc"]/idno[@type="dtaid"]         ##\-\- ddc: canonical target
\& fileDesc/publicationStmt/idno/idno[@type="DTAID"]
\& fileDesc/publicationStmt/idno[@type="DTAID"]
.Ve
.PP
Defaults to \*(L"0\*(R" (zero) if unset.
.SS "timestamp"
.IX Subsection "timestamp"
XPath(s):
.PP
.Vb 2
\& fileDesc/publicationStmt/date[@type="ddc\-timestamp"]           ##\-\- ddc: canonical target
\& fileDesc/publicationStmt/date                                  ##\-\- DTA mode only
.Ve
.PP
Defaults to last modification time of \fI\s-1XML_HEADER_FILE\s0\fR or the current time
if not set.
.SS "availability (human-readable)"
.IX Subsection "availability (human-readable)"
XPath(s):
.PP
.Vb 2
\& fileDesc/publicationStmt/availability[@type="ddc"]
\& fileDesc/publicationStmt/availability
.Ve
.PP
Defaults to \*(L"\-\*(R" if unset.
.SS "avail (\s-1DWDS\s0 code)"
.IX Subsection "avail (DWDS code)"
XPath(s):
.PP
.Vb 2
\& fileDesc/publicationStmt/availability[@type="ddc_dwds"]
\& fileDesc/publicationStmt/availability/@n
.Ve
.PP
Defaults to \*(L"\-\*(R" if unset.
.SS "textClass"
.IX Subsection "textClass"
Source XPath(s):
.PP
.Vb 5
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dwds1main"]
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dwds1sub"]
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dwds2main"]
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dwds2sub"]
\& profileDesc/textClass/keywords/term ##\-\- dwds keywords
.Ve
.PP
Target XPath:
.PP
.Vb 1
\& profileDesc/textClass/classCode[@scheme="ddcTextClassDWDS"]
.Ve
.SS "textClassDTA"
.IX Subsection "textClassDTA"
Source XPath(s):
.PP
.Vb 2
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dtamain"]
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#dtasub"]
.Ve
.PP
Target XPath:
.PP
.Vb 1
\& profileDesc/textClass/classCode[@scheme="ddcTextClassDTA"]
.Ve
.SS "\s-1DTA\s0 corpus"
.IX Subsection "DTA corpus"
Source XPath(s):
.PP
.Vb 1
\& profileDesc/textClass/classCode[@scheme="http://www.deutschestextarchiv.de/doku/klassifikation#DTACorpus"]
.Ve
.PP
Target XPath:
.PP
.Vb 1
\& profileDesc/textClass/classCode[@scheme="ddcTextClassCorpus"]
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdtatw\-get\-header.perl\fR\|(1),
\&...
.SH "AUTHOR"
.IX Header "AUTHOR"
Bryan Jurish <jurish@bbaw.de>
