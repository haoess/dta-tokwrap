.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DTA-TOKWRAP 1"
.TH DTA-TOKWRAP 1 "2009-04-28" "dta-tokwrap v0.01" "DTA Tokenization Utilities"
.SH "NAME"
dta\-tokwrap.perl \- top\-level tokenizer wrapper for DTA XML documents
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& dta\-tokwrap.perl [OPTIONS] XMLFILE(s)...
.Ve
.PP
.Vb 4
\& General Options:
\&  \-help                  # show this help message
\&  \-man                   # show complete manpage
\&  \-verbose LEVEL         # set verbosity level (0<=level<=3; default=0)
.Ve
.PP
.Vb 7
\& Make Emulation Options:
\&  \-targets TARGETS       # set build targets (default=\(aqall\(aq)
\&  \-make , \-nomake        # do/don\(aqt emulate make\-style dependency tracking (default=don\(aqt)
\&  \-remake                # force rebuilding of all targets (implies \-make)
\&  \-force\-target TARGET   # for \-make mode, force rebuilding of TARGET
\&  \-force                 # alias for \-force\-target=all
\&  \-noforce               # overrides all preceeding \-force and \-force\-target flags
.Ve
.PP
.Vb 5
\& Subprocessor Options:
\&  \-inplace , \-noinplace  # do/don\(aqt use locally built programs if available (default=do)
\&  \-sb\-xpath XPATH        # add sentence\-break hints on XPATH (element) open and close
\&  \-wb\-xpath XPATH        # add word\-break hints on XPATH (element) open and close
\&  \-procopt OPT=VALUE     # set arbitrary subprocessor options
.Ve
.PP
.Vb 6
\& I/O Options:
\&  \-outdir OUTDIR         # set output directory (default=.)
\&  \-tmpdir TMPDIR         # set temporary directory (default=$ENV{DTATW_TMP} or OUTDIR)
\&  \-keep , \-nokeep        # do/don\(aqt keep temporary files (default=don\(aqt)
\&  \-format , \-noformat    # do/don\(aqt pretty\-print XML output (default=do)
\&  \-dump\-xsl PREFIX       # dump generated XSL stylesheets to PREFIX*.xsl and exit
.Ve
.PP
.Vb 7
\& Logging Options:
\&  \-log\-config RCFILE     # use Log::Log4perl configuration file RCFILE (default=internal)
\&  \-log\-level LEVEL       # set minimum log level
\&  \-log\-file LOGFILE      # log to file LOGFILE (default=none)
\&  \-stderr  , \-nostderr   # do/don\(aqt log to console (default=do)
\&  \-profile , \-noprofile  # do/don\(aqt log profiling information (default=do)
\&  \-silent  , \-quiet      # alias for \-verbose=0 \-log\-level=FATAL \-notrace
.Ve
.PP
.Vb 8
\& Trace and Debugging Options:
\&  \-dummy , \-nodummy      # don\(aqt/do actually run any subprocessors (default=do)
\&  \-trace , \-notrace      # do/don\(aqt log trace messages (default: depends on \-verbose)
\&  \-traceAll              # enable logging of all possible trace messages
\&  \-notraceAll            # disable logging of all possible trace messages
\&  \-traceLevel LEVEL      # set trace logging level (default=\(aqtrace\(aq)
\&  \-traceX, \-notraceX     # do/don\(aqt trace "X" (X={Open|Load|Save|Make|...})
\&  \-traceXLevel LEVEL     # set log level for "X" traces (X={Open|...})
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.Sh "General Options"
.IX Subsection "General Options"
.IP "\-help" 4
.IX Item "-help"
Display a short help message and exit.
.IP "\-man" 4
.IX Item "-man"
Display the complete program manpage and exit.
.IP "\-verbose \s-1LEVEL\s0" 4
.IX Item "-verbose LEVEL"
Set verbosity level (0<=level<=3; default=0)
.Sh "Make Emulation Options"
.IX Subsection "Make Emulation Options"
.IP "\-targets \s-1TARGETS\s0" 4
.IX Item "-targets TARGETS"
Set build targets (default=\*(L"all\*(R").
Multiple \s-1TARGETS\s0 may be separated by whitespace, commas, or
by passing multiple \-targets options.
See \*(L"Known Targets\*(R" for a list of currently defined targets.
.IP "\-make , \-nomake" 4
.IX Item "-make , -nomake"
Do/don't emulate experimental \fImake\fR\-style dependency tracking (default=don't).
Use of \f(CW\*(C`\-make\*(C'\fR mode may be faster (because it requires less file I/O).
.IP "\-remake" 4
.IX Item "-remake"
Force rebuilding of all targets (implies \-make).
.IP "\-force\-target \s-1TARGET\s0" 4
.IX Item "-force-target TARGET"
For \-make mode, force rebuilding of \s-1TARGET\s0.
.IP "\-force" 4
.IX Item "-force"
Alias for \-force\-target\f(CW\*(C`=all\*(C'\fR
.IP "\-noforce" 4
.IX Item "-noforce"
Overrides all preceeding \*(L"\-force\*(R" and \-force\-target flags.
.Sh "Subprocessor Options:"
.IX Subsection "Subprocessor Options:"
.IP "\-inplace , \-noinplace" 4
.IX Item "-inplace , -noinplace"
Do/don't use locally built programs if available (default=do).
This is useful if you want to test a development version (\f(CW\*(C`\-inplace\*(C'\fR)
and an installed system version (\f(CW\*(C`\-noinplace\*(C'\fR) of this package
on the same machine.
.IP "\-sb\-xpath \s-1XPATH\s0" 4
.IX Item "-sb-xpath XPATH"
Tells the \f(CW\*(C`mkbx0\*(C'\fR subprocessor
to add sentence-break hints on \s-1XPATH\s0 (which should resolve only to element nodes) open and close.
\&\s-1XPATH\s0 is included in the generated \fIhint.xsl\fR \s-1XSL\s0 stylesheet as a \f(CW\*(C`match\*(C'\fR
item, so it can include e.g. top-level unions, but no nested unions.
.Sp
This option may be specified more than once.
.IP "\-wb\-xpath \s-1XPATH\s0" 4
.IX Item "-wb-xpath XPATH"
Tells the \f(CW\*(C`mkbx0\*(C'\fR subprocessor
to add sentence-break hints on \s-1XPATH\s0 (which should resolve only to element nodes) open and close.
Same caveats as for \*(L"\-sb\-xpath \s-1XPATH\s0\*(R"
.Sp
This option may be specified more than once.
.IP "\-procopt OPT=VALUE" 4
.IX Item "-procopt OPT=VALUE"
Set an arbitrary subprocessor option \s-1OPT\s0 to \s-1VALUE\s0.
See subprocessor module documentation for available options.
.Sh "I/O Options"
.IX Subsection "I/O Options"
.IP "\-outdir \s-1OUTDIR\s0" 4
.IX Item "-outdir OUTDIR"
Set output directory (default=.)
.IP "\-tmpdir \s-1TMPDIR\s0" 4
.IX Item "-tmpdir TMPDIR"
Set directory for storing temporary files.  Default value is
taken from the environment variable \f(CW$DTATW_TMP\fR if it is set,
otherwise the default is the value of \s-1OUTDIR\s0 (see \-outdir).
.IP "\-keep , \-nokeep" 4
.IX Item "-keep , -nokeep"
Do/don't keep temporary files, rather than deleting them
when they are no longer needed (default=don't).
.IP "\-format , \-noformat" 4
.IX Item "-format , -noformat"
Do/don't pretty-print \s-1XML\s0 output when possible (default=do).
.IP "\-dump\-xsl \s-1PREFIX\s0" 4
.IX Item "-dump-xsl PREFIX"
Dumps generated \s-1XSL\s0 stylesheets to PREFIX*.xsl and exit.
Useful for debugging.
Causes the following files to be written:
.Sp
.Vb 5
\& ${PREFIX}mkbx0_hint.xsl    # hint insertion
\& ${PREFIX}mkbx0_sort.xsl    # serialization sort\-key generation
\& ${PREFIX}standoff_t2s.xsl  # master XML to sentence standoff
\& ${PREFIX}standoff_t2w.xsl  # master XML to token standoff
\& ${PREFIX}standoff_t2a.xsl  # master XML to analysis standoff
.Ve
.Sh "Logging Options"
.IX Subsection "Logging Options"
.IP "\-log\-config \s-1RCFILE\s0" 4
.IX Item "-log-config RCFILE"
Use Log::Log4perl configuration file \fI\s-1RCFILE\s0\fR,
rather than the default internal configuration.
See \fILog::Log4perl\fR\|(3pm) for details
on the syntax of \fI\s-1RCFILE\s0\fR.
.IP "\-log\-level \s-1LEVEL\s0" 4
.IX Item "-log-level LEVEL"
Set minimum log level.
Only effective if the default (internal) log configuration is being used.
.IP "\-log\-file \s-1LOGFILE\s0" 4
.IX Item "-log-file LOGFILE"
Send log output to file \fI\s-1LOGFILE\s0\fR (default=none).
Only effective if the default (internal) log configuration is being used.
.IP "\-stderr  , \-nostderr" 4
.IX Item "-stderr  , -nostderr"
Do/don't log to console (default=do).
Only effective if the default (internal) log configuration is being used.
.IP "\-profile , \-noprofile" 4
.IX Item "-profile , -noprofile"
Do/don't log profiling information (default=do).
.IP "\-silent  , \-quiet" 4
.IX Item "-silent  , -quiet"
Alias for \f(CW\*(C`\-verbose=0 \-log\-level=FATAL \-notrace\*(C'\fR.
.Sh "Trace and Debugging Options"
.IX Subsection "Trace and Debugging Options"
.IP "\-dummy , \-nodummy" 4
.IX Item "-dummy , -nodummy"
Don't/do actually run any subprocessors (default=do)
.IP "\-trace , \-notrace" 4
.IX Item "-trace , -notrace"
Do/don't log trace messages (default: depends on the current \f(CW\*(C`\-verbose\*(C'\fR
level; see \-verbose).
.IP "\-traceAll" 4
.IX Item "-traceAll"
Enable logging of all possible trace messages.
\&\fBWarning\fR: this generates a lot of log output.
.IP "\-notraceAll" 4
.IX Item "-notraceAll"
Disable logging of all possible trace messages.
.IP "\-traceLevel \s-1LEVEL\s0" 4
.IX Item "-traceLevel LEVEL"
Set log level to use for trace messages (default='trace').
\&\f(CW\*(C`LEVEL\*(C'\fR is one of the following: \f(CW\*(C`trace, debug, info, warn, error, fatal\*(C'\fR.
Any other value for \f(CW\*(C`LEVEL\*(C'\fR causes trace messages not to be logged.
.IP "\-traceX , \-notraceX" 4
.IX Item "-traceX , -notraceX"
Do/don't log trace messages for the trace flavor \fIX\fR,
where \fIX\fR is one of the following:
.Sp
.Vb 8
\& Open   # document object open() method
\& Close  # document object close() method
\& Load   # load document data file
\& Save   # save document data file
\& Make   # document target (re\-)making (including status\-check)
\& Gen    # document target (re\-)generation
\& Proc   # subprocessor operation
\& Run    # external system command
.Ve
.IP "\-traceXLevel \s-1LEVEL\s0" 4
.IX Item "-traceXLevel LEVEL"
Set log level for \fIX\fR\-type traces to \s-1LEVEL\s0.
\&\fIX\fR is a trace message flavor as described
in \-traceX, and
\&\s-1LEVEL\s0 is as described in \-traceLevel.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
All other command-line arguments are assumed to be filenames of
\&\s-1DTA\s0 \*(L"base\-format\*(R" \s-1XML\s0 files,
which are simply (TEI\-conformant) \s-1UTF\-8\s0 encoded \s-1XML\s0 files with one \f(CW\*(C`<c>\*(C'\fR
element per character:
.IP "\(bu" 4
the document \fB\s-1MUST\s0\fR be encoded in \s-1UTF\-8\s0,
.IP "\(bu" 4
all text nodes to be tokenized should be descendants of a \f(CW\*(C`<c>\*(C'\fR element
which is itself a descendant of a \f(CW\*(C`<text>\*(C'\fR element (XPath=\f(CW\*(C`//text//c//text()\*(C'\fR),
.IP "\(bu" 4
the document should contain exactly one such \f(CW\*(C`<c>\*(C'\fR element for
each \fIlogical character\fR
which may be passed to the tokenizer,
.IP "\(bu" 4
no \f(CW\*(C`<c>\*(C'\fR element may be a descendant of another \f(CW\*(C`<c>\*(C'\fR element,
and
.IP "\(bu" 4
if stand-off targets are to be built (the default),
each \f(CW\*(C`<c>\*(C'\fR element should have a valid \f(CW\*(C`xml:id\*(C'\fR attribute.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This program is intended to provide a flexible high-level command-line interface
to the tokenization of \s-1DTA\s0 \*(L"base\-format\*(R" \s-1XML\s0 documents, generating
\&\fIe.g.\fR sentence\-, token\-, and analysis-level standoff \s-1XML\s0 annotations for
each input document.
.PP
The problem can be run in one of two main modes; see \*(L"Modes of Operation\*(R" for details on these.
In either mode, it can be used either as a standalone batch-processor for
one or more input documents, or called by a superordinate build system, \fIe.g.\fR
\&\s-1GNU\s0 \f(CW\*(C`make\*(C'\fR (see \f(CWmake(1)\fR).  Program operation is controlled primarily
by the specification of one or more \*(L"targets\*(R" to build for each input document;
see \*(L"Known Targets\*(R" for details.
.Sh "Modes of Operation"
.IX Subsection "Modes of Operation"
The program can be run in one of two modes of operation,
\&\*(L"\-make Mode\*(R" and \*(L"\-nomake Mode\*(R".
.PP
\fI\-make Mode\fR
.IX Subsection "-make Mode"
.PP
In this (experimental) mode, the program attempts to emulate the dependency tracking
features of \f(CW\*(C`make\*(C'\fR by (re\-)building only those targets which either
do not yet exist, or which are older than one or more of their dependencies.
Since some dependencies are ephemeral, existing only in \s-1RAM\s0 during
a single program run, this can mean a lot of pain for comparatively little gain.
.PP
\&\-make mode is enabled by specifying the \-make option
on the command\-line.
.PP
\fI\-nomake Mode\fR
.IX Subsection "-nomake Mode"
.PP
In this (experimental) mode, no implicit dependency tracking is
attempted, and all required data files (input, \*(L"temporary\*(R", and/or output)
must exist when the requested target is built; otherwise an error results.
\&\-nomake mode can be somewhat slower than \-make mode, since \*(L"temporary\*(R"
data (which in \-make mode are RAM-only ephemera) may need to be bounced off
the filesystem.
.PP
\&\-nomake mode is the default mode, and may be (re\-)enabled (overriding
any preceding \f(CW\*(C`\-make\*(C'\fR option) 
by specifying the \-nomake option
on the command\-line.
.Sh "Known Targets"
.IX Subsection "Known Targets"
\fI\-make Targets\fR
.IX Subsection "-make Targets"
.PP
The following targets are known values for the
\&\-targets option in \*(L"\-make Mode\*(R":
.IP "all" 4
.IX Item "all"
.PD 0
.IP "(not yet documented)" 4
.IX Item "(not yet documented)"
.PD
.PP
\fI\-nomake Targets\fR
.IX Subsection "-nomake Targets"
.PP
The following targets are known values for the
\&\-targets option in \*(L"\-nomake Mode\*(R":
.IP "mkindex" 4
.IX Item "mkindex"
\&\fBAlias(es):\fR cx sx tx xx
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.xml
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.cx, \s-1FILE\s0.sx, \s-1FILE\s0.tx
.Sp
Creates temporary
\&\*(L"character index\*(R" \fI\s-1FILE\s0.cx\fR (\s-1CSV\s0),
\&\*(L"structure index\*(R" \fI\s-1FILE\s0.sx\fR (\s-1XML\s0 without \f(CW\*(C`<c>\*(C'\fR elements),
and
\&\*(L"text index\*(R" \fI\s-1FILE\s0.tx\fR (raw text, unserialized)
for each input document \fI\s-1FILE\s0.xml\fR.
.IP "mkbx0" 4
.IX Item "mkbx0"
\&\fBAlias(es):\fR bx0
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.sx
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.bx0
.Sp
Creates temporary
hint\- and serialization index \fI\s-1FILE\s0.bx0\fR
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mkbx" 4
.IX Item "mkbx"
\&\fBAlias(es):\fR mktxt bx txt
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.bx0, \s-1FILE\s0.tx
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.bx, \s-1FILE\s0.txt
.Sp
Creates temporary serialized block-index file \fI\s-1FILE\s0.bx\fR
and serialized text file \fI\s-1FILE\s0.txt\fR
for each input document \fI\s-1FILE\s0.xml\fR.
.IP "mktok" 4
.IX Item "mktok"
\&\fBAlias(es):\fR tokenize tok t tt
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.txt
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.t
.Sp
Creates temporary CSV-format tokenizer output file \fI\s-1FILE\s0.t\fR
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mktxml" 4
.IX Item "mktxml"
\&\fBAlias(es):\fR tok2xml xtok txml ttxml tokxml
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.t, \s-1FILE\s0.bx, \s-1FILE\s0.cx
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.t.xml
.Sp
Creates master tokenized \s-1XML\s0 output file \fI\s-1FILE\s0.t.xml\fR
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mksxml" 4
.IX Item "mksxml"
\&\fBAlias(es):\fR mksos sosxml sosfile sxml
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.t.xml
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.s.xml
.Sp
Creates sentence-level stand-off \s-1XML\s0 file \s-1FILE\s0.s.xml
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mkwxml" 4
.IX Item "mkwxml"
\&\fBAlias(es):\fR mksow sowxml sowfile wxml
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.t.xml
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.w.xml
.Sp
Creates token-level stand-off \s-1XML\s0 file \s-1FILE\s0.w.xml
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mkaxml" 4
.IX Item "mkaxml"
\&\fBAlias(es):\fR mksoa sowaml soafile axml
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.t.xml
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.a.xml
.Sp
Creates token-analysis-level stand-off \s-1XML\s0 file \s-1FILE\s0.a.xml
for each input document \fI\s-1FILE\s0.xml\fR
.IP "mkstandoff" 4
.IX Item "mkstandoff"
\&\fBAlias(es):\fR standoff so mkso
.Sp
Alias for mksxml, mkwxml, mkaxml.
.IP "all" 4
.IX Item "all"
\&\fBAlias(es):\fR (none)
.Sp
\&\fBInput(s):\fR \s-1FILE\s0.xml
.Sp
\&\fBOutput(s):\fR \s-1FILE\s0.t.xml, \s-1FILE\s0.s.xml, \s-1FILE\s0.w.xml, \s-1FILE\s0.a.xml
.Sp
Alias for all targets required to generated
the target's output files (master tokenized file and stand-off files)
from the input document, run in the proper order.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1),
\&...
.SH "AUTHOR"
.IX Header "AUTHOR"
Bryan Jurish <jurish@bbaw.de>
