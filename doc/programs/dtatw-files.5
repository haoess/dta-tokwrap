.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DTATW-FILES 5"
.TH DTATW-FILES 5 "2010-09-06" "dta-tokwrap v0.28" "DTA Tokenization Utilities"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dtatw\-files.perl \- file formats used by dta\-tokwrap utilities
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& FILENAME    (STATUS)   DESCRIPTION
\&
\& *.xml       (input)    input XML file in DTA "base\-format"
\& *.chr.xml   (input)    common convention for input files
\& *.char.xml  (input)    another common convention for input files
\& 
\& *.cx        (temp)     character index (CSV,TAB\-separated)
\& *.sx        (temp)     structure index (XML)
\& *.tx        (temp)     text index (UTF\-8 text)
\& *.bx0       (temp)     preliminary "block index" (XML)
\& *.bx        (temp)     block index (CSV,TAB\-separated)
\& *.txt       (temp)     serialized text (UTF\-8 text)
\& *.t         (temp)     tokenizer output (.tt, TAB\-separated)
\& *.cpx       (temp)     character+page index (CSV,TAB\-separated)
\& *.wpx       (temp)     word+page index (CSV,TAB\-separated)
\& 
\& *.t.xml     (output)   master serial XML output (XML)
\& *.s.xml     (output)   sentence\-level standoff (XML)
\& *.w.xml     (output)   token\-level standoff (XML)
\& *.a.xml     (output)   token\-analysis\-level standoff (XML)
\& 
\& *.u.xml     (output)   extended serial XML output (XML)
\& *.cw.xml    (output)   base\-format + tokens (XML)
\& *.cws.xml   (output)   base\-format + tokens + sentences (XML)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This manual describes the file formats currently used by the
dta-tokwrap utilities.
.SS "Input File Formats"
.IX Subsection "Input File Formats"
\fI*.xml\fR
.IX Subsection "*.xml"
.PP
\&\fBAlias(es)\fR: *.chr.xml, *.char.xml
.PP
Input \s-1XML\s0 file in \s-1DTA\s0 \*(L"base-format\*(R" (UTF8\-encoded \s-1XML\s0 with one \f(CW\*(C`c\*(C'\fR
element per character):
.IP "\(bu" 4
input documents \fB\s-1MUST\s0\fR be encoded in \s-1UTF\-8\s0,
.IP "\(bu" 4
all text nodes to be tokenized should be descendants of a \f(CW\*(C`<c>\*(C'\fR element
which is itself a descendant of a \f(CW\*(C`<text>\*(C'\fR element (XPath \f(CW\*(C`//text//c//text()\*(C'\fR),
.IP "\(bu" 4
each input document should contain exactly one such \f(CW\*(C`<c>\*(C'\fR element for
\&\fIeach logical character\fR
which may be passed to the tokenizer,
.IP "\(bu" 4
no \f(CW\*(C`<c>\*(C'\fR element may be a descendant of another \f(CW\*(C`<c>\*(C'\fR element,
and
.IP "\(bu" 4
each \f(CW\*(C`c\*(C'\fR element should have a valid \f(CW\*(C`xml:id\*(C'\fR attribute.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <TEI xmlns="http://www.tei\-c.org/ns/1.0" xmlns:dta="http://www.deutsches\-textarchiv.de/ns/1.0">
\&   <!\-\- ... \-\->
\&   <text>
\&     <!\-\- ... \-\->
\&     <c xml:id="c1"> </c>
\&     <c xml:id="c2">U</c>
\&     <c xml:id="c3">e</c>
\&     <c xml:id="c4">b</c>
\&     <c xml:id="c5">e</c>
\&     <c xml:id="c6">r</c>
\&     <c xml:id="c7"> </c>
\&     <c xml:id="c8">d</c>
\&     <c xml:id="c9">i</c>
\&     <c xml:id="c10">e</c>
\&     <c xml:id="c11"> </c>
\&     <!\-\- ... \-\->
\&   </text>
\&   <!\-\- ... \-\->
\& </text>
.Ve
.SS "Temporary File Formats"
.IX Subsection "Temporary File Formats"
\fI*.cx\fR
.IX Subsection "*.cx"
.PP
Character index file (TAB-separated text)
as created by
\&\fIdtatw-mkindex\fR.
Used for
translating between byte offsets and \f(CW\*(C`xml:id\*(C'\fRs.
.PP
Example:
.PP
.Vb 10
\& %% <c>\-element index generated by ../src/dtatw\-mkindex
\& %% Package: dta\-tokwrap version 0.04 / svn+ssh://odo.dwds.de/home/svn/dev/dta\-tokwrap/trunk @ 2445:2447
\& %% Command\-line: ../src/dtatw\-mkindex \*(Aqxmlsrc/ex1.xml\*(Aq \*(Aqex1.cx\*(Aq \*(Aqex1.sx\*(Aq \*(Aqex1.tx\*(Aq
\& %%======================================================================
\& %% $ID$        $XML_OFFSET$    $XML_LENGTH$    $TXT_OFFSET$    $TXT_LEN$       $TEXT$
\& c1     276     20      0       1        
\& c2     382     20      1       1       U
\& c3     402     20      2       1       e
\& c4     422     20      3       1       b
\& c5     442     20      4       1       e
\& c6     462     20      5       1       r
\& c7     482     20      6       1        
\& c8     502     20      7       1       d
\& c9     522     20      8       1       i
\& c10    542     21      9       1       e
\& c11    563     21      10      1
.Ve
.PP
\fI*.sx\fR
.IX Subsection "*.sx"
.PP
Structure index (\s-1XML\s0)
as created by \fIdtatw-mkindex\fR.
All XPaths \f(CW\*(C`//text//c|//text//lb\*(C'\fR have been removed and replaced
by placeholder \f(CW\*(C`c\*(C'\fR elements for each contiguous \fIblock\fR of original \f(CW\*(C`c\*(C'\fR and \f(CW\*(C`lb\*(C'\fR
elements.  The placeholder elements have the form:
.PP
.Vb 1
\& <c n="XOFF XLEN TOFF TLEN"/>
.Ve
.PP
where \s-1XOFF\s0,XLEN are byte-offset and \-length in the source \s-1XML\s0 file (*.xml)
and \s-1TOFF\s0,TLEN are byte-offset and \-length in the raw text index file (*.tx).
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <TEI xmlns="http://www.tei\-c.org/ns/1.0" xmlns:dta="http://www.deutsches\-textarchiv.de/ns/1.0">
\&   <!\-\- ... \-\->
\&   <text>
\&      <titlePage>
\&        <c n="338 11 1 0"/>
\&        <docTitle>
\&          <c n="349 10 1 0"/>
\&          <titlePart type="main">
\&            <c n="359 23 1 0"/>
\&            <c n="382 1666 1 82"/>
\&          </titlePart>
\&          <c n="2048 12 83 0"/>
\&          <c n="2060 5 83 1"/>
\&        <!\-\- ... \-\->
\&      </titlePage>
\&   </text>
\&   <!\-\- ... \-\->
\& </text>
.Ve
.PP
\fI*.tx\fR
.IX Subsection "*.tx"
.PP
Raw, unserialized text index (\s-1UTF\-8\s0 text)
as created by \fIdtatw-mkindex\fR.
Results from concatenating all \f(CW\*(C`//text//c//text()\*(C'\fR nodes from
the source document, and inserting newlines for \f(CW\*(C`//text//lb\*(C'\fR elements.
.PP
Example:
.PP
.Vb 11
\&  Ueber die Beeinflussung
\& einfacher psychischer VorgA\*~Xnge
\& durch einige Arzneimittel.
\& Experimentelle Untersuchungen
\& von
\& Dr. Emil Kraepelin,
\& Professor der Psychiatrie in Heidelberg.
\& Mit einer Curventafel.
\& Jena,
\& Verlag von Gustav Fischer.
\& 1892.
.Ve
.PP
\fI*.bx0\fR
.IX Subsection "*.bx0"
.PP
Preliminary \*(L"block index\*(R" (\s-1XML\s0)
as created by \*(L"dta\-tokwrap.perl \-t mkbx0\*(R".
Generated from the *.sx file by inserting zero or more \*(L"hints\*(R"
of one of the following forms:
.PP
.Vb 3
\& <s/>    <!\-\- sentence\-break hint \-\->
\& <w/>    <!\-\- token\-break hint    \-\->
\& <lb/>   <!\-\- line\-break hint     \-\->
.Ve
.PP
Zero or more output elements may also be assigned a \f(CW\*(C`dta.tw.key\*(C'\fR
attribute, which should be some unique key identifying the
logical block or \fIsegment\fR with which any text descended from
that element should be sorted during serialization (this is how we
get \f(CW\*(C`seg\*(C'\fR elements to clump together).
\&\f(CW\*(C`dta.tw.key\*(C'\fR attributes are inherited by default.
.PP
Also note that namespaces have been forcibly removed from the
\&\s-1XML\s0 structure.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <TEI dta.tw.key="TEI.id2369102" _xmlns="http://www.tei\-c.org/ns/1.0" xmlns_dta="http://www.deutsches\-textarchiv.de/ns/1.0">
\&   <!\-\- ... \-\->
\&   <text>
\&      <titlePage>
\&        <s/>
\&        <c n="338 11 1 0"/>
\&        <docTitle>
\&          <c n="349 10 1 0"/>
\&          <titlePart type="main">
\&            <s/>
\&            <c n="359 23 1 0"/>
\&            <c n="382 1666 1 82"/>
\&            <s/>
\&          </titlePart>
\&          <c n="2048 12 83 0"/>
\&          <c n="2060 5 83 1"/>
\&        </s>
\&      </titlePage>
\&   </text>
\&   <!\-\- ... \-\->
\& </TEI>
.Ve
.PP
\fI*.bx\fR
.IX Subsection "*.bx"
.PP
Block index (TAB-separated text)
as created by \*(L"dta\-tokwrap.perl \-t mkbx\*(R".
Used for
translating between serialized-text (.txt) byte offsets and
raw-text (.tx) byte offsets, which in turn gets us to \f(CW\*(C`c/@xml:id\*(C'\fRs.
Still with me?  Good.
.PP
Example:
.PP
.Vb 12
\& %% XML block list file generated by DTA::TokWrap::Document::saveBxFile() (DTA::TokWrap version 0.04)
\& %% Original source file: ./xmlsrc/ex1.xml
\& %%======================================================================
\& %% $KEY$       $ELT$   $XML_OFFSET$    $XML_LENGTH$    $TX_OFFSET$     $TX_LEN$        $TXT_OFFSET$    $TXT_LEN$
\& _\|_ROOT_\|_       _\|_ROOT_\|_        0       0       0       0       0       0
\& TEI.id2406247  s       176     0       0       0       0       6
\& TEI.id2406247  s       176     0       0       0       6       6
\& TEI.id2406247  s       215     0       0       0       12      6
\& TEI.id2406247  s       227     0       0       0       18      6
\& TEI.id2406247  s       258     0       0       0       24      6
\& TEI.id2406247  c       270     26      0       1       30      1
\& TEI.id2406247  s       270     0       0       0       31      6
.Ve
.PP
\fI*.txt\fR
.IX Subsection "*.txt"
.PP
Serialized text (\s-1UTF\-8\s0 text)
as created by \*(L"dta\-tokwrap.perl \-t mktxt\*(R",
possibly containing tokenizer \*(L"hints\*(R",
to be passed to the underlying tokenizer.
.PP
The precise form taken by the hints in this file depends on many things,
notably the options \f(CW\*(C`\-\-strong\-hints\*(C'\fR, \f(CW\*(C`\-\-weak\-hints\*(C'\fR, and \f(CW\*(C`\-\-no\-hints\*(C'\fR
to dta\-tokwrap.perl.  You should ensure that
your tokenizer is prepared to deal with whatever flavor of hints you are passing it
(in particular, don't use the \f(CW\*(C`dwds_tomasotath\*(C'\fR tokenizer together with the
\&\f(CW\*(C`\-\-strong\-hints\*(C'\fR option, unless you want it to return a lot of (\f(CW\*(C`$\*(C'\fR, \f(CW\*(C`WB\*(C'\fR, \f(CW\*(C`$\*(C'\fR) \*(L"tokens\*(R".
.PP
Example:
.PP
.Vb 5
\& $SB$
\& Ueber die Beeinflussung
\& einfacher psychischer VorgA\*~Xnge
\& durch einige Arzneimittel.
\& $SB$
\& 
\& $SB$
\& Experimentelle Untersuchungen
\& $SB$
.Ve
.PP
\fI*.t\fR
.IX Subsection "*.t"
.PP
Tokenizer output (.tt, TAB-separated \s-1UTF\-8\s0 text).
The first non-text field should contain \*(L"\s-1TXTOFF\s0 \s-1TXTLEN\s0\*(R" pairs,
where \s-1TXTOFF\s0 and \s-1TXTLEN\s0 are byte-offset and \-length in the *.txt
file.  These data are required for recovery of \f(CW\*(C`c\*(C'\fR element IDs.
See \fI\fImootfiles\fI\|(5)\fR for details on the file format.
.PP
Example:
.PP
.Vb 11
\& %% raw tokenizer output generated by ../src/dtatw\-tokenize\-dummy (dta\-tokwrap version 0.04)
\& Ueber  49 5
\& die    55 3
\& Beeinflussung  59 13
\& einfacher      73 9
\& psychischer    83 11
\& VorgA\*~Xnge      95 9
\& durch  105 5
\& einige 111 6
\& Arzneimittel   118 12
\& .      130 1   $.
.Ve
.PP
\fI*.cpx\fR
.IX Subsection "*.cpx"
.PP
Character+pagebreak index (\s-1CSV\s0, TAB-separated).
Used in generation of *.u.xml files.
.PP
Example:
.PP
.Vb 11
\& %% <(^c$)>+<pb> index generated by ../scripts/dtatw\-mkpx.perl
\& %%======================================================================
\& %%$X_ID        $PB_I   $PB_N   $PB_FACS        $X_XPATH        
\& c1     0       NULL    NULL    /TEI[1]/text[1]/c[1]
\& c2     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[1]
\& c3     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[2]
\& c4     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[3]
\& c5     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[4]
\& c6     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[5]
\& c7     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[6]
\& c8     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/c[7]
.Ve
.PP
\fI*.wpx\fR
.IX Subsection "*.wpx"
.PP
Token+pagebreak index (\s-1CSV\s0, TAB-separated).
Used in generation of *.u.xml files.
Format is same as *.cpx, but IDs are token-ids.
.PP
Example:
.PP
.Vb 11
\& %% <(^w$)>+<pb> index generated by ../scripts/dtatw\-mkpx.perl
\& %%======================================================================
\& %%$X_ID        $PB_I   $PB_N   $PB_FACS        $X_XPATH        
\& w1     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[1]
\& w2     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[2]
\& w3     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[3]
\& w4     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[4]
\& w5     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[5]
\& w6     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[6]
\& w7     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[7]
\& w8     7       NULL    NULL    /TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]/w[8]
.Ve
.SS "Output File Formats"
.IX Subsection "Output File Formats"
\fI*.t.xml\fR
.IX Subsection "*.t.xml"
.PP
Master XML-ified tokenizer output (\s-1XML\s0).
X\-Paths:
.PP
.Vb 8
\& /*/s        : sentence
\& /*/s/w      : token: <w @xml:id b="TXTOFF TXTLEN" t="TEXT" c="C_IDS">...</w>
\& //w/a       : token analysis: <a>ANALYSIS_TEXT</a>
\& //w//*      : (additional analysis data, inserted e.g. by DTA::CAB utilities)
\& //w/@xml:id : token id (unique within document, counted in serialized order)
\& //w/@b      : byte\-offset and length of token in tokenizer input *.txt
\& //w/@t      : token text as output by tokenizer
\& //w/@c      : space\-separated list of //c/@id for token characters
.Ve
.PP
This format can also be passed directly to and from the \s-1\fIDTA::CAB\s0\fR\|(3pm)
analysis suite using the \fIDTA::CAB::Format::XmlNative\fR\|(3pm)
formatter class.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <sentences xml:base="ex1.xml">
\&  <s xml:id="s1">
\&    <w xml:id="w1" b="49 5" t="Ueber" c="c2 c3 c4 c5 c6"/>
\&    <w xml:id="w2" b="55 3" t="die" c="c8 c9 c10"/>
\&    <w xml:id="w3" b="59 13" t="Beeinflussung" c="c12 c13 c14 c15 c16 c17 c18 c19 c20 c21 c22 c23 c24"/>
\&    <w xml:id="w4" b="73 9" t="einfacher" c="c25 c26 c27 c28 c29 c30 c31 c32 c33"/>
\&    <w xml:id="w5" b="83 11" t="psychischer" c="c35 c36 c37 c38 c39 c40 c41 c42 c43 c44 c45"/>
\&    <w xml:id="w6" b="95 9" t="VorgA\*~Xnge" c="c47 c48 c49 c50 c51 c52 c53 c54"/>
\&    <w xml:id="w7" b="105 5" t="durch" c="c55 c56 c57 c58 c59"/>
\&    <w xml:id="w8" b="111 6" t="einige" c="c61 c62 c63 c64 c65 c66"/>
\&    <w xml:id="w9" b="118 12" t="Arzneimittel" c="c68 c69 c70 c71 c72 c73 c74 c75 c76 c77 c78 c79"/>
\&    <w xml:id="w10" b="130 1" t="." c="c80">
\&      <a>$.</a>
\&    </w>
\&  </s>
\& <!\-\- ... \-\->
\& </sentences>
.Ve
.PP
\fI*.s.xml\fR
.IX Subsection "*.s.xml"
.PP
Sentence-level standoff \s-1XML\s0. \fB\s-1DEPRECATED\s0\fR in favor of *.t.xml, *.u.xml.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <sentences xml:base="ex1.w.xml">
\&  <s xml:id="s1">
\&    <w ref="#w1"/>
\&    <w ref="#w2"/>
\&    <w ref="#w3"/>
\&    <w ref="#w4"/>
\&    <w ref="#w5"/>
\&    <w ref="#w6"/>
\&    <w ref="#w7"/>
\&    <w ref="#w8"/>
\&    <w ref="#w9"/>
\&    <w ref="#w10"/>
\&  </s>
\&  <!\-\- ... \-\->
\& </sentences>
.Ve
.PP
\fI*.w.xml\fR
.IX Subsection "*.w.xml"
.PP
Token-level standoff \s-1XML\s0. \fB\s-1DEPRECATED\s0\fR in favor of *.t.xml, *.u.xml.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <tokens xml:base="ex1.xml">
\&  <w xml:id="w1" t="Ueber">
\&    <c ref="#c2"/>
\&    <c ref="#c3"/>
\&    <c ref="#c4"/>
\&    <c ref="#c5"/>
\&    <c ref="#c6"/>
\&  </w>
\&  <w xml:id="w2" t="die">
\&    <c ref="#c8"/>
\&    <c ref="#c9"/>
\&    <c ref="#c10"/>
\&  </w>
\&  <w xml:id="w3" t="Beeinflussung">
\&    <c ref="#c12"/>
\&    <c ref="#c13"/>
\&    <c ref="#c14"/>
\&    <c ref="#c15"/>
\&    <c ref="#c16"/>
\&    <c ref="#c17"/>
\&    <c ref="#c18"/>
\&    <c ref="#c19"/>
\&    <c ref="#c20"/>
\&    <c ref="#c21"/>
\&    <c ref="#c22"/>
\&    <c ref="#c23"/>
\&    <c ref="#c24"/>
\&  </w>
\&  <!\-\- ... \-\->
\& </tokens>
.Ve
.PP
\fI*.a.xml\fR
.IX Subsection "*.a.xml"
.PP
Token-analysis-level standoff \s-1XML\s0.
Currently contains only analyses supplied by the tokenizer.
\&\fB\s-1DEPRECATED\s0\fR in favor of *.t.xml, *.u.xml.
.PP
Example:
.PP
.Vb 2
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <analyses xml:base="ex1.w.xml">
\&
\&  <a ref="#w10">$.</a>
\&  <a ref="#w14">$ABBR</a>
\&  <a ref="#w17">$,</a>
\&  <a ref="#w23">$.</a>
\&  <a ref="#w27">$.</a>
\&  <a ref="#w29">$,</a>
\&  <a ref="#w34">$.</a>
\&  <a ref="#w35">$CARDPUNCT</a>
\&  <!\-\- ... \-\->
\& </analyses>
.Ve
.PP
\fI*.u.xml\fR
.IX Subsection "*.u.xml"
.PP
Extended serialized \s-1XML\s0 format, based on *.t.xml with additional XPaths:
.PP
.Vb 7
\& //s/@xp   : common source\-XML XPath prefix for all sentence tokens
\& //w/@xp   : XPath suffix (of ../@xp) for token
\& //w/@t0   : tokenizer input text (including e.g. newlines) if different from @t
\& //w/@u    : unicruft approximation of @t, if not equal to @t
\& //w/@u0   : unicruft approximation of @t0m if not equal to @u
\& //w/@pb   : index of last //pb before onset of //w
\& //w/@cs   : character spans: "CID+LEN CID+LEN ... CID+LEN"; replaces @c
.Ve
.PP
\&... and removed XPaths:
.PP
.Vb 2
\& //w/@c    : removed in favor of //w/@cs
\& //w/@b    : removed in favor of //w/@cs, //w/@t0
.Ve
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0" encoding="UTF\-8"?>
\& <sentences xml:base="ex1a.xml">
\&  <s xml:id="s1" xp="/TEI[1]/text[1]/front[1]/titlePage[1]/docTitle[1]/titlePart[1]">
\&    <w xml:id="w1" t="Ueber" pb="7" xp="\-/c[1]" cs="c2+5"/>
\&    <w xml:id="w2" t="die" pb="7" xp="\-/c[7]" cs="c8+3"/>
\&    <w xml:id="w3" t="Beeinflussung" pb="7" xp="\-/c[11]" cs="c12+13"/>
\&    <w xml:id="w4" t="einfacher" pb="7" xp="\-/c[24]" cs="c25+9"/>
\&    <w xml:id="w5" t="psychischer" pb="7" xp="\-/c[34]" cs="c35+11"/>
\&    <w xml:id="w6" t="Vorga\*:nge" pb="7" xp="\-/c[46]" cs="c47+8"/>
\&    <w xml:id="w7" t="durch" pb="7" xp="\-/c[54]" cs="c55+5"/>
\&    <w xml:id="w8" t="einige" pb="7" xp="\-/c[60]" cs="c61+6"/>
\&    <w xml:id="w9" t="Arzneimittel" pb="7" xp="\-/c[67]" cs="c68+12"/>
\&    <w xml:id="w10" t="." pb="7" xp="\-/c[79]" cs="c80+1">
\&      <a>$.</a>
\&    </w>
\&  </s>
\& </sentences>
.Ve
.PP
\fI*.cw.xml\fR
.IX Subsection "*.cw.xml"
.PP
Base-format \s-1XML\s0 file with tokens encoded as \f(CW\*(C`w\*(C'\fR elements,
as output by dtatw\-add\-w.perl.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0"?>
\& <TEI xmlns="http://www.tei\-c.org/ns/1.0" xmlns:dta="http://www.deutsches\-textarchiv.de/ns/1.0">
\&  <!\-\- ... \-\->
\&  <text>
\&    <!\-\- ... \-\->
\&          <titlePart type="main">
\&              <w xml:id="w1">
\&                <c xml:id="c2">U</c>
\&                <c xml:id="c3">e</c>
\&                <c xml:id="c4">b</c>
\&                <c xml:id="c5">e</c>
\&                <c xml:id="c6">r</c>
\&              </w>
\&              <c xml:id="c7"> </c>
\&              <w xml:id="w2">
\&                <c xml:id="c8">d</c>
\&                <c xml:id="c9">i</c>
\&                <c xml:id="c10">e</c>
\&              </w>
\&              <c xml:id="c11"> </c>
\&              <!\-\- ... \-\->
\&              <w xml:id="w10">
\&                <c xml:id="c80">.</c>
\&              </w>
\&          </titlePart>
\&    <!\-\- ... \-\->
\&  </text>
\&  <!\-\- ... \-\->
\& </TEI>
.Ve
.PP
\fI*.cws.xml\fR
.IX Subsection "*.cws.xml"
.PP
Base-format \s-1XML\s0 file with tokens and sentences encoded as \f(CW\*(C`w\*(C'\fR and \f(CW\*(C`s\*(C'\fR elements respectively,
as output by dtatw\-add\-s.perl.
.PP
Example:
.PP
.Vb 10
\& <?xml version="1.0"?>
\& <TEI xmlns="http://www.tei\-c.org/ns/1.0" xmlns:dta="http://www.deutsches\-textarchiv.de/ns/1.0">
\&  <!\-\- ... \-\->
\&  <text>
\&    <!\-\- ... \-\->
\&          <titlePart type="main">
\&            <s xml:id="s1">
\&              <w xml:id="w1">
\&                <c xml:id="c2">U</c>
\&                <c xml:id="c3">e</c>
\&                <c xml:id="c4">b</c>
\&                <c xml:id="c5">e</c>
\&                <c xml:id="c6">r</c>
\&              </w>
\&              <c xml:id="c7"> </c>
\&              <w xml:id="w2">
\&                <c xml:id="c8">d</c>
\&                <c xml:id="c9">i</c>
\&                <c xml:id="c10">e</c>
\&              </w>
\&              <c xml:id="c11"> </c>
\&              <!\-\- ... \-\->
\&              <w xml:id="w10">
\&                <c xml:id="c80">.</c>
\&              </w>
\&            </s>
\&          </titlePart>
\&    <!\-\- ... \-\->
\&  </text>
\&  <!\-\- ... \-\->
\& </TEI>
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIdtatw\-add\-c.perl\fR\|(1),
\&\fIdtatw\-add\-w.perl\fR\|(1),
\&\fIdtatw\-add\-s.perl\fR\|(1),
\&\fIdta\-tokwrap.perl\fR\|(1),
\&\fIdtatw\-txml2uxml.perl\fR\|(1),
\&\fIDTA::TokWrap::Intro\fR\|(3pm),
\&...
.SH "AUTHOR"
.IX Header "AUTHOR"
Bryan Jurish <jurish@bbaw.de>
